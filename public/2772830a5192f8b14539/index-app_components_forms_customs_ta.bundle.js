"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkapi_gateway_dashboard"] = self["webpackChunkapi_gateway_dashboard"] || []).push([["index-app_components_forms_customs_ta"],{

/***/ "./app/components/forms/customs/table-column-title.riot":
/*!**************************************************************!*\
  !*** ./app/components/forms/customs/table-column-title.riot ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var helpers_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/utilities */ \"./app/helpers/utilities.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'css': `form-table-column-title .column-body,[is=\"form-table-column-title\"] .column-body{ max-width: 100%; } form-table-column-title .wrap-column-sort,[is=\"form-table-column-title\"] .wrap-column-sort{ min-width: 11px; float: left; } form-table-column-title .wrap-column-title,[is=\"form-table-column-title\"] .wrap-column-title{ float: left; } form-table-column-title .wrap-column-search,[is=\"form-table-column-title\"] .wrap-column-search,form-table-column-title .wrap-column-filter,[is=\"form-table-column-title\"] .wrap-column-filter{ min-width: 15px; float: right; } form-table-column-title .w-85,[is=\"form-table-column-title\"] .w-85{ width: 85%; } form-table-column-title .w-60,[is=\"form-table-column-title\"] .w-60{ width: 60%; } form-table-column-title .w-15,[is=\"form-table-column-title\"] .w-15{ max-width: 15%; min-width: 15px;; }`,\n\n  'exports': {\n    onBeforeMount(props) {\n        if (!props.columnName) return (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.showAlertError)(new Error('[Form Table Column Title] Required Column Name'))\n        if (typeof props.callback !== 'function') return (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.showAlertError)(new Error('[Form Table Column Title] Required Callback'))\n        this.inputId = (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.randomString)(10, { onlyChars: true })\n        this.initialWidth(props)\n        this.setCallbackData(props)\n    },\n\n    initialWidth(props) {\n        const {useSort, useFilter, useSearch} = props || {}\n        this.wdContent = 90\n        if (useSort) this.wdContent -= 15\n        if (useSearch || useFilter) this.wdContent -= 15\n    },\n\n    onMounted() {\n        (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.logInfo)(`[EVENTS][MOUNTED][${this.name}]`)\n    },\n\n    onBeforeUnmount() {},\n\n    onBeforeUpdate(props) {\n        this.setCallbackData(props)\n    },\n\n    // callback\n    callback() {\n        this.props.callback(this.callbackData)\n    },\n\n    updateContent(e) {\n        this.callback()\n    },\n\n    doSearch() {\n        console.log('doSearch')\n    },\n\n    doFilter() {\n        console.log('doFilter')\n    },\n\n    setCallbackData(props) {\n        this.callbackData = {\n            id: this.inputId\n        }\n        if (props.useSort) {\n            this.callbackData['sort_key'] = props.sortKey\n            this.callbackData['sort_value'] = props.sortValue\n        }\n        if (props.useSearch) {\n            this.callbackData['search_key'] = props.searchKey\n            this.callbackData['search_value'] = props.searchValue\n        }\n        if (props.useFilter) {\n            this.callbackData['filter_key'] = props.filterKey\n            this.callbackData['filter_selected_keys'] = props.filterSelectedKeys\n            this.filterSelectedKeys = props.filterSelectedKeys\n        }\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div expr73=\"expr73\"><div expr74=\"expr74\"></div><div expr76=\"expr76\"> </div><div expr77=\"expr77\"></div><div expr78=\"expr78\"></div></div>',\n      [{\n        'redundantAttribute': 'expr73',\n        'selector': '[expr73]',\n\n        'expressions': [{\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'class',\n\n          'evaluate': function(scope) {\n            return ['form-control-sm column-body tx-11 ', scope.props.elClass, ' pd-0'].join('');\n          }\n        }]\n      }, {\n        'type': bindingTypes.IF,\n\n        'evaluate': function(scope) {\n          return scope.props.useSort;\n        },\n\n        'redundantAttribute': 'expr74',\n        'selector': '[expr74]',\n\n        'template': template('<form-button-sort expr75=\"expr75\"></form-button-sort>', [{\n          'expressions': [{\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'class',\n\n            'evaluate': function(scope) {\n              return ['wrap-column-sort w-15 ', scope.props.sortClass].join('');\n            }\n          }, {\n            'type': expressionTypes.EVENT,\n            'name': 'onclick',\n\n            'evaluate': function(scope) {\n              return scope.doSortCallback;\n            }\n          }]\n        }, {\n          'type': bindingTypes.TAG,\n          'getComponent': getComponent,\n\n          'evaluate': function(scope) {\n            return 'form-button-sort';\n          },\n\n          'slots': [],\n\n          'attributes': [{\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'sort-key',\n\n            'evaluate': function(scope) {\n              return scope.props.columnName;\n            }\n          }, {\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'sort-value',\n\n            'evaluate': function(scope) {\n              return scope.props.sortValue;\n            }\n          }, {\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'callback',\n\n            'evaluate': function(scope) {\n              return console.log;\n            }\n          }],\n\n          'redundantAttribute': 'expr75',\n          'selector': '[expr75]'\n        }])\n      }, {\n        'redundantAttribute': 'expr76',\n        'selector': '[expr76]',\n\n        'expressions': [{\n          'type': expressionTypes.TEXT,\n          'childNodeIndex': 0,\n\n          'evaluate': function(scope) {\n            return [scope.props.dataTitle].join('');\n          }\n        }, {\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'class',\n\n          'evaluate': function(scope) {\n            return ['wrap-column-title w-', scope.wdContent, ' ', scope.props.titleClass].join('');\n          }\n        }]\n      }, {\n        'type': bindingTypes.IF,\n\n        'evaluate': function(scope) {\n          return scope.props.useSearch;\n        },\n\n        'redundantAttribute': 'expr77',\n        'selector': '[expr77]',\n\n        'template': template('<i class=\"fa fa-search\"></i>', [{\n          'expressions': [{\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'class',\n\n            'evaluate': function(scope) {\n              return [\n                'wrap-column-search pointer ',\n                scope.props.searchValue ? 'text-warning' : '',\n                ' w-15 ',\n                scope.props.searchClass\n              ].join('');\n            }\n          }, {\n            'type': expressionTypes.EVENT,\n            'name': 'onclick',\n\n            'evaluate': function(scope) {\n              return scope.doSearch;\n            }\n          }]\n        }])\n      }, {\n        'type': bindingTypes.IF,\n\n        'evaluate': function(scope) {\n          return scope.props.useFilter;\n        },\n\n        'redundantAttribute': 'expr78',\n        'selector': '[expr78]',\n\n        'template': template('<i class=\"fa fa-filter\"></i>', [{\n          'expressions': [{\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'class',\n\n            'evaluate': function(scope) {\n              return [\n                'wrap-column-filter pointer ',\n                scope.props.filterValue ? 'text-warning' : '',\n                ' w-15 ',\n                scope.props.searchClass\n              ].join('');\n            }\n          }, {\n            'type': expressionTypes.EVENT,\n            'name': 'onclick',\n\n            'evaluate': function(scope) {\n              return scope.doFilter;\n            }\n          }]\n        }])\n      }]\n    );\n  },\n\n  'name': 'form-table-column-title'\n});\n\n//# sourceURL=webpack://api-gateway-dashboard/./app/components/forms/customs/table-column-title.riot?");

/***/ }),

/***/ "./app/components/forms/customs/tinymce.riot":
/*!***************************************************!*\
  !*** ./app/components/forms/customs/tinymce.riot ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var helpers_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/utilities */ \"./app/helpers/utilities.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'css': null,\n\n  'exports': {\n    onBeforeMount(props) {\n        if (typeof props.callback !== 'function') return (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.showAlertError)(new Error('[Form TinyMCE] Required Callback'))\n        this.inputId = (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.randomString)(10, {onlyChars: true})\n        if (props.value) this.value = props.value\n        this.callbackData = {\n            value: this.value,\n            id: this.inputId\n        }\n    },\n\n    onMounted() {\n        (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.logInfo)(`[EVENTS][MOUNTED][${this.name}]`)\n        if (!tinymce) return null\n        tinymce.init({\n            selector: 'textarea#' + this.inputId,\n            content_style: \"body {font-size: 10px;}\",\n            menubar: '',\n            setup: (editor) => {\n                editor.on('keyup', this.updateContent)\n            },\n            ...(this.props.elHeight ? {height: this.props.elHeight + 'px'} : {})\n        })\n        .then((ww) => {\n            $('.tox-statusbar__branding').remove()\n        })\n    },\n\n    onBeforeUnmount() {},\n    onUpdated() {},\n\n    // callback\n    callback() {\n        this.props.callback(this.callbackData)\n    },\n\n    updateContent(e) {\n        const valueHTML = tinymce.activeEditor.getContent()\n        const valueText = tinymce.activeEditor.getContent({format : 'text'})\n        this.callbackData.value = valueHTML\n        this.callbackData.text = valueText\n        console.log({valueHTML, valueText})\n        this.callback()\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template('<textarea expr69=\"expr69\" id=\"texteditor\"> </textarea>', [{\n      'redundantAttribute': 'expr69',\n      'selector': '[expr69]',\n\n      'expressions': [{\n        'type': expressionTypes.TEXT,\n        'childNodeIndex': 0,\n\n        'evaluate': function(scope) {\n          return [scope.value].join('');\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'class',\n\n        'evaluate': function(scope) {\n          return scope.props.elClass || 'form-control tx-10';\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'id',\n\n        'evaluate': function(scope) {\n          return scope.inputId;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'cols',\n\n        'evaluate': function(scope) {\n          return scope.props.cols;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'rows',\n\n        'evaluate': function(scope) {\n          return scope.props.rows;\n        }\n      }, {\n        'type': expressionTypes.EVENT,\n        'name': 'onkeyup',\n\n        'evaluate': function(scope) {\n          return scope.updateContent;\n        }\n      }]\n    }]);\n  },\n\n  'name': 'form-tinymce'\n});\n\n//# sourceURL=webpack://api-gateway-dashboard/./app/components/forms/customs/tinymce.riot?");

/***/ })

}]);