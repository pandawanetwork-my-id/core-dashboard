"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkapi_gateway_dashboard"] = self["webpackChunkapi_gateway_dashboard"] || []).push([["index-app_components_forms_checkboxes_c"],{

/***/ "./app/components/forms/checkboxes/checkbox-group.riot":
/*!*************************************************************!*\
  !*** ./app/components/forms/checkboxes/checkbox-group.riot ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var helpers_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/utilities */ \"./app/helpers/utilities.js\");\n/* harmony import */ var lodash_isarray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.isarray */ \"./node_modules/lodash.isarray/index.js\");\n/* harmony import */ var lodash_isarray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isarray__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'css': null,\n\n  'exports': {\n    onBeforeMount(props) {\n        this.items = (props.elItems || []).map(x => {\n            x.id = (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.randomString)(10, {onlyChars: true})\n            x.checked = (props.elChecked || []).indexOf(x.name) > -1\n            return x\n        })\n    },\n\n    onMounted(props) {\n        (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.logInfo)(`[EVENTS][MOUNTED][${this.name}]`)\n        if (typeof props.callback !== 'function') return (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.showAlertError)(new Error('[Form Checkbox Group] Callback Should Be a Function'))\n        if (!lodash_isarray__WEBPACK_IMPORTED_MODULE_1___default()(props.elItems)) return (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.showAlertError)(new Error('[Form Checkbox Group] el-items is Required'))\n    },\n\n    callback() {\n        let xSelected = []\n        for (const x of this.items) {\n            const isChecked = $('#' + x.id).is(':checked')\n            if (isChecked) {\n                const valueOfInput = this.$('#' + x.id).value\n                xSelected.push(valueOfInput)\n            }\n        }\n        this.props.callback(xSelected)\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"input-group pd-t-5\"><div expr41=\"expr41\" class=\"pd-x-5\"></div></div>',\n      [{\n        'type': bindingTypes.EACH,\n        'getKey': null,\n        'condition': null,\n\n        'template': template('<input expr42=\"expr42\" type=\"checkbox\"/> ', [{\n          'expressions': [{\n            'type': expressionTypes.TEXT,\n            'childNodeIndex': 1,\n\n            'evaluate': function(scope) {\n              return [scope.item.title].join('');\n            }\n          }]\n        }, {\n          'redundantAttribute': 'expr42',\n          'selector': '[expr42]',\n\n          'expressions': [{\n            'type': expressionTypes.VALUE,\n\n            'evaluate': function(scope) {\n              return scope.item.name;\n            }\n          }, {\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'class',\n\n            'evaluate': function(scope) {\n              return [scope.props.elClass, ' mg-r-2'].join('');\n            }\n          }, {\n            'type': expressionTypes.EVENT,\n            'name': 'onclick',\n\n            'evaluate': function(scope) {\n              return scope.callback;\n            }\n          }, {\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'id',\n\n            'evaluate': function(scope) {\n              return scope.item.id;\n            }\n          }, {\n            'type': expressionTypes.ATTRIBUTE,\n            'name': 'checked',\n\n            'evaluate': function(scope) {\n              return scope.item.checked;\n            }\n          }]\n        }]),\n\n        'redundantAttribute': 'expr41',\n        'selector': '[expr41]',\n        'itemName': 'item',\n        'indexName': null,\n\n        'evaluate': function(scope) {\n          return scope.items;\n        }\n      }]\n    );\n  },\n\n  'name': 'form-checkbox-group'\n});\n\n//# sourceURL=webpack://api-gateway-dashboard/./app/components/forms/checkboxes/checkbox-group.riot?");

/***/ }),

/***/ "./app/components/forms/checkboxes/checkbox.riot":
/*!*******************************************************!*\
  !*** ./app/components/forms/checkboxes/checkbox.riot ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var helpers_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/utilities */ \"./app/helpers/utilities.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'css': null,\n\n  'exports': {\n    onBeforeMount() {\n        this.inputId = (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.randomString)(5, { onlyChars: true })\n    },\n\n    onMounted(props) {\n        (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.logInfo)(`[EVENTS][MOUNTED][${this.name}]`)\n        if (typeof props.callback !== 'function') {\n            (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.showAlertError)(new Error('[Form Checkbox] Callback Should Be a Function'))\n        }\n    },\n\n    callback() {\n        if (typeof this.props.callback === 'function') {\n            const isChecked = $('#' + this.inputId).is(':checked')\n            const valueOfInput = this.$('#' + this.inputId).value\n            this.props.callback({\n                id: this.inputId,\n                name: this.props.name,\n                value: valueOfInput,\n                checked: isChecked\n            })\n        }\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template('<input expr44=\"expr44\" type=\"checkbox\"/>', [{\n      'redundantAttribute': 'expr44',\n      'selector': '[expr44]',\n\n      'expressions': [{\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'name',\n\n        'evaluate': function(scope) {\n          return scope.props.name;\n        }\n      }, {\n        'type': expressionTypes.VALUE,\n\n        'evaluate': function(scope) {\n          return scope.props.value;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'class',\n\n        'evaluate': function(scope) {\n          return scope.props.dataClass || 'btn';\n        }\n      }, {\n        'type': expressionTypes.EVENT,\n        'name': 'onclick',\n\n        'evaluate': function(scope) {\n          return scope.callback;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'id',\n\n        'evaluate': function(scope) {\n          return scope.inputId;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'checked',\n\n        'evaluate': function(scope) {\n          return scope.props.checked ? 'true' : '';\n        }\n      }]\n    }]);\n  },\n\n  'name': 'form-checkbox'\n});\n\n//# sourceURL=webpack://api-gateway-dashboard/./app/components/forms/checkboxes/checkbox.riot?");

/***/ }),

/***/ "./app/components/forms/checkboxes/toggle-checklist.riot":
/*!***************************************************************!*\
  !*** ./app/components/forms/checkboxes/toggle-checklist.riot ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var helpers_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/utilities */ \"./app/helpers/utilities.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'css': null,\n\n  'exports': {\n    onBeforeMount(props) {\n        this.inputId = (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.randomString)(10, {onlyChars: true})\n        if (props.selectedAll) this.isChecked = true\n        if (typeof props.callback !== 'function') {\n            (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.showAlertError)(new Error('[Toggle Check List] Callback Should Be a Function'))\n        }\n    },\n\n    onMounted() {\n        (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.logInfo)(`[EVENTS][MOUNTED][${this.name}]`)\n    },\n\n    onBeforeUpdate(props) {\n        if (props.key || props.elKey) this.key = props.key || props.elKey\n    },\n\n    toggleCheck(key, target) {\n        const isChecked = $(target).is(':checked')\n        this.props.callback(key, isChecked, this.props.elItem)\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template('<input expr45=\"expr45\" type=\"checkbox\"/>', [{\n      'redundantAttribute': 'expr45',\n      'selector': '[expr45]',\n\n      'expressions': [{\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'name',\n\n        'evaluate': function(scope) {\n          return 'checkbox-' + scope.key;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'checked',\n\n        'evaluate': function(scope) {\n          return scope.props.isChecked;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'class',\n\n        'evaluate': function(scope) {\n          return scope.props.elClass;\n        }\n      }, {\n        'type': expressionTypes.ATTRIBUTE,\n        'name': 'id',\n\n        'evaluate': function(scope) {\n          return scope.inputId;\n        }\n      }, {\n        'type': expressionTypes.EVENT,\n        'name': 'onclick',\n\n        'evaluate': function(scope) {\n          return (e) => scope.toggleCheck(scope.key, e.target);\n        }\n      }]\n    }]);\n  },\n\n  'name': 'toggle-checklist'\n});\n\n//# sourceURL=webpack://api-gateway-dashboard/./app/components/forms/checkboxes/toggle-checklist.riot?");

/***/ }),

/***/ "./app/components/forms/checkboxes/toggle-switch.riot":
/*!************************************************************!*\
  !*** ./app/components/forms/checkboxes/toggle-switch.riot ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var helpers_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! helpers/utilities */ \"./app/helpers/utilities.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'css': `form-toggle-switch .switch,[is=\"form-toggle-switch\"] .switch{ position: relative; display: inline-block; width: 60px; height: 34px; } form-toggle-switch .switch input,[is=\"form-toggle-switch\"] .switch input{ opacity: 0; width: 0; height: 0; } form-toggle-switch .slider,[is=\"form-toggle-switch\"] .slider{ position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; -webkit-transition: .4s; transition: .4s; } form-toggle-switch .slider:before,[is=\"form-toggle-switch\"] .slider:before{ position: absolute; content: \"\"; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; -webkit-transition: .4s; transition: .4s; } form-toggle-switch input:checked + .slider,[is=\"form-toggle-switch\"] input:checked + .slider{ background-color: #3ded16; } form-toggle-switch input:focus + .slider,[is=\"form-toggle-switch\"] input:focus + .slider{ box-shadow: 0 0 1px #2196F3; } form-toggle-switch input:checked + .slider:before,[is=\"form-toggle-switch\"] input:checked + .slider:before{ -webkit-transform: translateX(26px); -ms-transform: translateX(26px); transform: translateX(26px); } form-toggle-switch .slider.round,[is=\"form-toggle-switch\"] .slider.round{ border-radius: 34px; } form-toggle-switch .slider.round:before,[is=\"form-toggle-switch\"] .slider.round:before{ border-radius: 50%; } form-toggle-switch .switch-title-on,[is=\"form-toggle-switch\"] .switch-title-on{ color: #3ded16; } form-toggle-switch .switch-title-off,[is=\"form-toggle-switch\"] .switch-title-off{ color: #ccc; }`,\n\n  'exports': {\n    toggleId: (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.randomString)(5, {onlyChars: true}),\n\n    config: {\n        isChecked: false,\n        stateValue: 0, // 0: OFF, 1: ON\n        titles: ['Off', 'On'], // menyesuaikan index\n        title: 'Off',\n        stateType: 'off',\n    },\n\n    onBeforeMount(props) {\n        this.init(props)\n    },\n\n    onMounted(props) {\n        (0,helpers_utilities__WEBPACK_IMPORTED_MODULE_0__.logInfo)(`[EVENTS][MOUNTED][${this.name}]`)\n        if (typeof props.callback !== 'function') {\n            showAlertError(new Error('[Form Toggle Switch] Callback Should Be a Function'))\n        }\n    },\n\n    onBeforeUpdate(props) {\n        this.init(props)\n    },\n\n    init(currentProps) {\n        if (currentProps.titles) this.config.titles = currentProps.titles\n        this.config.stateValue = currentProps.currentStatus\n        this.config.title = this.config.titles[this.config.stateValue]\n    },\n\n    changeState(e) {\n        if (e) {\n            const target = e.target\n            const isChecked = $(target).is(':checked')\n            if (isChecked) {\n                this.config.stateType = 'on'\n                this.config.stateValue = 1\n                this.config.title = this.config.titles[this.config.stateValue]\n            } else {\n                this.config.stateType = 'off'\n                this.config.stateValue = 0\n                this.config.title = this.config.titles[this.config.stateValue]\n            }\n            this.config.isChecked = isChecked\n            this.callback()\n            this.update()\n        }\n    },\n\n    callback() {\n        this.props.callback(this.config)\n    }\n  },\n\n  'template': function(template, expressionTypes, bindingTypes, getComponent) {\n    return template(\n      '<div class=\"form-inline\"><label class=\"switch float-left\"><input expr52=\"expr52\" type=\"checkbox\"/><span class=\"slider round\"></span></label><label expr53=\"expr53\"> </label></div>',\n      [{\n        'redundantAttribute': 'expr52',\n        'selector': '[expr52]',\n\n        'expressions': [{\n          'type': expressionTypes.EVENT,\n          'name': 'onchange',\n\n          'evaluate': function(scope) {\n            return scope.changeState;\n          }\n        }, {\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'checked',\n\n          'evaluate': function(scope) {\n            return scope.config.stateValue > 0;\n          }\n        }, {\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'id',\n\n          'evaluate': function(scope) {\n            return scope.toggleId;\n          }\n        }]\n      }, {\n        'redundantAttribute': 'expr53',\n        'selector': '[expr53]',\n\n        'expressions': [{\n          'type': expressionTypes.TEXT,\n          'childNodeIndex': 0,\n\n          'evaluate': function(scope) {\n            return scope.config.title;\n          }\n        }, {\n          'type': expressionTypes.ATTRIBUTE,\n          'name': 'class',\n\n          'evaluate': function(scope) {\n            return ['float-right mg-l-5 switch-title-', scope.stateType, ' tx-11'].join('');\n          }\n        }]\n      }]\n    );\n  },\n\n  'name': 'form-toggle-switch'\n});\n\n//# sourceURL=webpack://api-gateway-dashboard/./app/components/forms/checkboxes/toggle-switch.riot?");

/***/ }),

/***/ "./app/components/forms/checkboxes/index.checkboxes.js":
/*!*************************************************************!*\
  !*** ./app/components/forms/checkboxes/index.checkboxes.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _checkbox_riot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checkbox.riot */ \"./app/components/forms/checkboxes/checkbox.riot\");\n/* harmony import */ var _checkbox_group_riot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkbox-group.riot */ \"./app/components/forms/checkboxes/checkbox-group.riot\");\n/* harmony import */ var _toggle_checklist_riot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toggle-checklist.riot */ \"./app/components/forms/checkboxes/toggle-checklist.riot\");\n/* harmony import */ var _toggle_switch_riot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toggle-switch.riot */ \"./app/components/forms/checkboxes/toggle-switch.riot\");\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  FormToggleChecklist: _toggle_checklist_riot__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  FormToggleSwitch: _toggle_switch_riot__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  FormCheckbox: _checkbox_riot__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  FormCheckboxGroup: _checkbox_group_riot__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n});\n\n//# sourceURL=webpack://api-gateway-dashboard/./app/components/forms/checkboxes/index.checkboxes.js?");

/***/ })

}]);